syntax = "proto3";

package user_service;

service UserService {
    rpc UserCreate(User) returns (User);
    rpc UserGet(ByIdReq) returns (User);
    rpc UserSignUp(Token) returns (User);
    rpc UserList(ListReq) returns (UserListResp);
    rpc UserLogin(LoginReq) returns (UserLoginResp);
    rpc UserUpdate(User) returns (User);
    rpc UserDelete(ByIdReq) returns (EmptyRes);

    rpc UserSalaryCreate(UserSalary) returns (UserSalary);
    rpc UserSalaryGet(ByIdReq) returns (UserSalary);
    rpc UserSalaryList(SalaryReq) returns (UserSalaryListResp);
    rpc UserSalaryUpdate(UserSalary) returns (UserSalary);
    rpc UserSalaryDelete(ByIdReq) returns (EmptyRes);

}    

message EmptyRes{}

message User{
    string id = 1;
    string full_name = 2;
    string password = 3;
    string email = 4;
    string birthday = 5;
    string gender = 6;
    string phone1 = 7;
    string phone2 = 8;
    string permission = 9;
    string working_day = 10;
    string address = 11;
    string passport_series = 12;
    string passport_image1 = 13;
    string passport_image2 = 14;
    string image = 15;
    string branch_id = 16;
    string created_at = 17;
    string updated_at = 18;
}    

message UserSalary {
    string id = 1;
    string amount = 2;
    string user_id = 3;
    string created_at = 5;
    string updated_at = 6;
}

message UserSalaryListResp {
    repeated UserSalary salary = 1;
    int64 count = 2;
}

message UserLoginResp {
    bool ok = 1;
    string token = 2;
    string whoami = 3;
}    

message UserListResp {
    repeated User users = 1;
    int64 count = 2;
}    

message LoginReq {
    string email = 1;
    string password = 2;
}    

message ListReq {
    int64 page = 1;
    int64 limit = 2;
}    

message SalaryReq{
    string id = 1;
}

message Token{
    string token = 1;
}    

message ByIdReq {
    string id = 1;
}

